
import java.util.ArrayList;
import java.util.List;

partial class HSpaghettiCodeDetectorImpl {

@members <--


	private List<HAnnotation> annotations = new ArrayList<>();

	@Override
	public String getGuiName() {
		return "Spaghetti Code";
	}

	
-->

@model collect (HAnnotation hAnnotation) <--
		return annotations.add(hAnnotation);
-->

@model connect (HSpaghettiCodeAntiPattern hAntiPattern) <--
		for (HAnnotation a : annotations) {
			a.getPartOf().add(hAntiPattern);
			if (a instanceof HIntenseFieldUsageCodeSmell) {
				hAntiPattern.setHIntenseFieldUsageCodeSmell((HIntenseFieldUsageCodeSmell) a);
			} else if (a instanceof HAverageParametersMetric) {
				hAntiPattern.setHAverageParametersMetric((HAverageParametersMetric) a);
			} else if (a instanceof HAverageOverloadingInClassMetric) {
				hAntiPattern.setHAverageOverloadingInClassMetric((HAverageOverloadingInClassMetric) a);
			} else if (a instanceof HNumberOfChildMetric) {
				hAntiPattern.setHNumberOfChild((HNumberOfChildMetric) a);
			} else if (a instanceof HDepthOfInheritanceMetric) {
				hAntiPattern.setHDepthOfInheritance((HDepthOfInheritanceMetric) a);
			}
		}
		return true;
-->

}